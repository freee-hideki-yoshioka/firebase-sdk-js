!function(e,t){for(var r in t)e[r]=t[r]}(this,function(e){var t={};function r(a){if(t[a])return t[a].exports;var i=t[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(a,i,function(t){return e[t]}.bind(null,i));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=r(7),i=JSON.parse(process.env.FIREBASE_CONFIG).projectId,s=a.config().env&&a.config().env.region?a.config().env.region:"asia-northeast1";var n;!function(e){e.apiHost="apiHost",e.appHost="appHost",e.authHost="authHost",e.redirectPath="redirectPath",e.callbackPath="callbackPath",e.companiesPath="companiesPath",e.homePath="homePath",e.tokenHost="tokenHost",e.authorizePath="authorizePath",e.tokenPath="tokenPath",e.cryptoKeyBucket="cryptoKeyBucket"}(n=t.ConfigKeys||(t.ConfigKeys={}));const o={freee:[{key:n.apiHost,default:"https://api.freee.co.jp",production:"https://api.freee.co.jp"},{key:n.appHost,default:"http://localhost:5000",production:`https://${i}.web.app`},{key:n.authHost,default:`http://localhost:5001/${i}/${s}/api/auth`,production:`https://${s}-${i}.cloudfunctions.net/api/auth`},{key:n.redirectPath,default:"/redirect"},{key:n.callbackPath,default:"/callback"},{key:n.companiesPath,default:"/companies"},{key:n.homePath,default:"/"},{key:n.tokenHost,default:"https://accounts.secure.freee.co.jp",production:"https://accounts.secure.freee.co.jp"},{key:n.authorizePath,default:"/public_api/authorize"},{key:n.tokenPath,default:"/public_api/token"}],firebase:[{key:n.cryptoKeyBucket,default:`${i}.appspot.com`}]};t.ConfigManager=class{static get(e,t){return e&&this.hasKey(e,t)?e[t]:this.getDefaultValue(t)}static getFunctionsConfigs(){return a.config()}static getDefaultValue(e){const t=[].concat(o.freee).concat(o.firebase).find(t=>t.key===e);return this.isProduction()&&t.production?t.production:t.default}static isProduction(){const e=this.getFunctionsConfigs();return e.env&&"production"===e.env.mode}static hasKey(e,t){return Object.keys(e).find(e=>e===t)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=r(2);t.FreeeServerSDK=a.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=r(3),i=r(4),s=r(5),n=r(6),o=r(0),c=r(8),h=r(11);t.default=class{constructor(e,t){const u=e.freee;this.admin=t?i.initializeApp({credential:i.credential.cert(t),databaseURL:`https://${t.project_id}.firebaseio.com`,storageBucket:`${t.project_id}.appspot.com`}):i.initializeApp();const p=o.ConfigManager.get(e.firebase,o.ConfigKeys.cryptoKeyBucket),f=p?new c.default(this.admin.storage().bucket(p)):null,l=r(12).create(this.getCredentials(u)),d=new h.TokenManager(this.admin,l,f);a.default.defaults.baseURL=o.ConfigManager.get(u,o.ConfigKeys.apiHost),this.apiClient=new s.FreeeAPIClient(d,a.default),this.firebaseAuthClient=new n.FreeeFirebaseAuthClient(this.admin,l,a.default,d,e)}firebaseApp(){return this.admin}api(){return this.apiClient}auth(){return this.firebaseAuthClient}getCredentials(e){const t=o.ConfigManager.getFunctionsConfigs().freee;return{client:{id:t.client_id,secret:t.client_secret},auth:{tokenHost:o.ConfigManager.get(e,o.ConfigKeys.tokenHost),authorizePath:o.ConfigManager.get(e,o.ConfigKeys.authorizePath),tokenPath:o.ConfigManager.get(e,o.ConfigKeys.tokenPath)}}}}},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("firebase-admin")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.FreeeAPIClient=class{constructor(e,t){this.tokenManager=e,this.axios=t}get(e,t,r){return this.tokenManager.get(r).then(r=>{const a={Authorization:`Bearer ${r}`,"X-Api-Version":"2020-06-15"};return this.axios.get(e,{params:t,headers:a})})}post(e,t,r){return this.tokenManager.get(r).then(r=>{const a={Authorization:`Bearer ${r}`,"X-Api-Version":"2020-06-15"};return this.axios.post(e,t,{headers:a})})}put(e,t,r){return this.tokenManager.get(r).then(r=>{const a={Authorization:`Bearer ${r}`,"X-Api-Version":"2020-06-15"};return this.axios.put(e,t,{headers:a})})}delete(e,t,r){return this.tokenManager.get(r).then(r=>{const a={Authorization:`Bearer ${r}`,"X-Api-Version":"2020-06-15"};return this.axios.delete(e,{data:t,headers:a})})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=r(0);t.FreeeFirebaseAuthClient=class{constructor(e,t,r,i,s){this.admin=e,this.oauth2=t,this.axios=r,this.tokenManager=i;const n=s.freee,o=a.ConfigManager.getFunctionsConfigs();this.clientId=o.freee.client_id,this.clientSecret=o.freee.client_secret,this.redirectPath=a.ConfigManager.get(n,a.ConfigKeys.redirectPath),this.callbackPath=a.ConfigManager.get(n,a.ConfigKeys.callbackPath),this.companiesPath=a.ConfigManager.get(n,a.ConfigKeys.companiesPath),this.homePath=a.ConfigManager.get(n,a.ConfigKeys.homePath),this.appHost=a.ConfigManager.get(n,a.ConfigKeys.appHost),this.authHost=a.ConfigManager.get(n,a.ConfigKeys.authHost),this.apiKey=s.firebase&&s.firebase.apiKey}redirect(e){const t=this.oauth2.authorizationCode.authorizeURL({redirect_uri:`${this.authHost}${this.getCallbackPath()}`});e.redirect(t)}async callback(e,t){try{const r=await this.oauth2.authorizationCode.getToken({client_id:this.clientId,client_secret:this.clientSecret,code:e,redirect_uri:`${this.authHost}${this.getCallbackPath()}`}).catch(()=>{t.send(this.signInRefusedTemplate())}),a={accessToken:r.access_token,refreshToken:r.refresh_token,expiresIn:r.expires_in,createdAt:r.created_at},i=await this.getFreeeUser(a.accessToken),s=i.data.user.id,n=i.data.user.email,o=i.data.user.display_name?i.data.user.display_name:"",c=await this.createFirebaseAccount(s,n,o,a);t.redirect(`${this.appHost}${this.homePath}?token=${c}`)}catch(e){console.error("Some error occured on login process:",e),t.status(401).send("Some error occured on login process")}}getRedirectPath(){return this.redirectPath}getCallbackPath(){return this.callbackPath}getCompaniesPath(){return this.companiesPath}async createCryptoKey(e){await this.tokenManager.createCryptoKey(e)}getFreeeUser(e){return this.axios.get("/api/1/users/me?companies=true",{headers:{Authorization:`Bearer ${e}`}})}async createFirebaseAccount(e,t,r,a){const i=e.toString();return await this.tokenManager.save(i,t,a),await this.admin.auth().updateUser(i,{email:t,displayName:r}).catch(async e=>{if("auth/user-not-found"===e.code)return await this.admin.auth().createUser({uid:i,email:t,displayName:r});throw e}),await this.admin.auth().createCustomToken(i)}signInRefusedTemplate(){return`\n      <script>\n        window.location.href = '${this.appHost}'\n      <\/script>`}}},function(e,t){e.exports=require("firebase-functions")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const a=r(9),i=r(10),s="base64",n="utf8";t.default=class{constructor(e){this.bucket=e,this.keyCache={}}async createCryptoKey(e){const t=a.format(e,"yyyyMM");return this.create(t)}async encrypt(e){const{accessToken:t,refreshToken:r}=e,o=a.format(new Date,"yyyyMM"),c=await this.getKey(o),h=i.randomBytes(16);return Object.assign(Object.assign({},e),{accessToken:this.crypt(t,this.cipher(c,h),n,s),refreshToken:this.crypt(r,this.cipher(c,h),n,s),keyFileName:o,algorithm:"aes-256-cbc",iv:h})}async decrypt(e){const{accessToken:t,refreshToken:r,keyFileName:a,algorithm:i,iv:o}=e,c=await this.getKey(a);return Object.assign(Object.assign({},e),{accessToken:this.crypt(t,this.decipher(i,c,o),s,n),refreshToken:this.crypt(r,this.decipher(i,c,o),s,n)})}cipher(e,t){return i.createCipheriv("aes-256-cbc",e,t)}decipher(e,t,r){return i.createDecipheriv(e,t,r)}async getKey(e){if(this.keyCache[e])return this.keyCache[e];try{return await this.get(e)}catch(t){return console.info("No key file for:",e),await this.create(e),await this.get(e)}}crypt(e,t,r,a){let i=t.update(e,r,a);return i={},i+=t.final(a),i}async create(e){const t=i.randomBytes(32),r=this.bucket.file(e);await r.save(t),console.log("New crypto key is successfully created for:",e)}async get(e){const t=await this.bucket.file(e).download();return this.keyCache[e]=t[0],console.log("Crypto key is retrieved from storage for:",e),t[0]}}},function(e,t){e.exports=require("date-fns")},function(e,t){e.exports=require("crypto")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.TokenManager=class{constructor(e,t,r){this.admin=e,this.oauth2=t,this.cryptor=r,this.tokenCache={}}async get(e){const t=await this.getTokenFromFirebase(e);if(!this.tokenExpired(t))return t.accessToken;console.log("accessToken has been expired for user:",e);try{return await this.refreshToken(t,e)}catch(t){if(t.output&&401===t.output.statusCode){console.log("Token is already refreshed in other instance:",t);const r=await this.getTokenFromFirebase(e,!0);if(this.tokenExpired(r))throw console.error("Can not get available token:",t),t;return r.accessToken}throw t}}async save(e,t,r){const a=await this.encrypt(r);await this.admin.firestore().doc(`/freeeTokens/${e}`).set(Object.assign(Object.assign({},a),{email:t}))}async createCryptoKey(e){this.cryptor&&await this.cryptor.createCryptoKey(e)}async refreshToken(e,t){const r={access_token:e.accessToken,refresh_token:e.refreshToken,expires_in:e.expiresIn},a=this.oauth2.accessToken.create(r),i=await a.refresh(),s=await this.encrypt({accessToken:i.token.access_token,refreshToken:i.token.refresh_token,expiresIn:i.token.expires_in,createdAt:i.token.created_at});return this.tokenCache[t]=s,await this.admin.firestore().doc(`/freeeTokens/${t}`).set(Object.assign({},s),{merge:!0}),console.log("accessToken is successfully refreshed for user:",t),i.token.access_token}tokenExpired(e){const t=e.createdAt+e.expiresIn-300;return(new Date).getTime()/1e3>=t}async getTokenFromFirebase(e,t){if(!t){const t=this.tokenCache[e];if(t)return await this.decrypt(t)}const r=(await this.admin.firestore().doc(`/freeeTokens/${e}`).get()).data();return this.tokenCache[e]=r,console.log("Token is retrieved from firestore for user:",e),await this.decrypt(r)}async encrypt(e){return this.cryptor?await this.cryptor.encrypt(e):e}async decrypt(e){return this.cryptor?await this.cryptor.decrypt(e):e}}},function(e,t){e.exports=require("simple-oauth2")}]));
//# sourceMappingURL=index.js.map